name: Update Website

on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * mon"

jobs:
  update-wesbite:
    name: Update Website
    runs-on: ubuntu-latest

    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          submodules: recursive

      - name: Install Nix
        uses: nixbuild/nix-quick-install-action@v31
        with:
          nix_conf: |
            keep-env-derivations = true
            keep-outputs = true

      - name: Restore and save Nix store
        uses: nix-community/cache-nix-action@v6
        with:
          # restore and save a cache using this key
          primary-key: nix-${{ runner.os }}-${{ hashFiles('**/*.nix', '**/flake.lock') }}
          # if there's no cache hit, restore a cache by this prefix
          restore-prefixes-first-match: nix-${{ runner.os }}-
          # collect garbage until the Nix store size (in bytes) is at most this number
          # before trying to save a new cache
          # 1G = 1073741824
          gc-max-store-size-linux: 5G
          # do purge caches
          purge: true
          # purge all versions of the cache
          purge-prefixes: nix-${{ runner.os }}-
          # created more than this number of seconds ago
          purge-created: 0
          # or, last accessed more than this number of seconds ago
          # relative to the start of the `Post Restore and save Nix store` phase
          purge-last-accessed: 0
          # except any version with the key that is the same as the `primary-key`
          purge-primary-key: never

      - name: Update flake.lock
        run: |
          nix flake update

      - name: Update submodules
        run: |
          git submodule update --remote --rebase

      - name: Create Pull Request
        id: create-pr
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.GH_TOKEN_FOR_UPDATES }}
          title: "treewide: update"
          commit-message: "treewide: update"
          branch: update_website
          delete-branch: true
          sign-commits: true
          labels: |
            dependencies
            automated
          assignees: MrSom3body

      - name: Auto merge
        run: |
          if [ -n "${{ steps.create-pr.outputs.pull-request-number }}" ]; then
            gh pr merge --auto --rebase ${{ steps.create-pr.outputs.pull-request-number }}
          fi
        env:
          GH_TOKEN: ${{ github.token }}
